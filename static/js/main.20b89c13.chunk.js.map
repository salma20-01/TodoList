{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","TodoItem","getStyle","backgroundColor","borderBottom","props","todo","completed","this","id","title","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","border","borderRadius","cursor","float","Todos","todos","map","AddTodo","state","e","setState","target","name","value","onSubmit","preventDefault","addTodo","display","placeholder","flex","className","About","Fragment","App","axios","delete","then","res","filter","post","data","get","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"wOAkBA,IAAMA,EAAc,CAClBC,WAAY,OACZC,MAAO,OACPC,UAAW,SACXC,QAAS,QAGLC,EAAY,CAChBH,MAAO,OACPI,eAAgB,QAGHC,EA3BR,WACL,OACE,yBAAQC,MAAOR,EAAf,UACE,0CACA,cAAC,IAAD,CAAMQ,MAAOH,EAAWI,GAAG,IAA3B,kBAEQ,IAJV,IAKI,IACF,cAAC,IAAD,CAAMD,MAAOH,EAAWI,GAAG,SAA3B,uBCROC,EAAb,4MACEC,SAAW,WACT,MAAO,CACLC,gBAAiB,UACjBR,QAAS,OACTS,aAAc,kBACdP,eAAgB,EAAKQ,MAAMC,KAAKC,UAAY,eAAiB,SANnE,uDAUY,IAAD,EACeC,KAAKH,MAAMC,KAAzBG,EADD,EACCA,GAAIC,EADL,EACKA,MACZ,OACE,qBAAKX,MAAOS,KAAKN,WAAjB,SACE,8BACE,uBACES,KAAK,WACLC,SAAUJ,KAAKH,MAAMQ,aAAaC,KAAKN,KAAMC,KAC5C,IACFC,EACD,wBAAQK,QAASP,KAAKH,MAAMW,QAAQF,KAAKN,KAAMC,GAAKV,MAAOkB,EAA3D,wBApBV,GAA8BC,aAmCxBD,EAAW,CACfzB,WAAY,UACZC,MAAO,OACP0B,OAAQ,OACRxB,QAAS,UACTyB,aAAc,MACdC,OAAQ,UACRC,MAAO,SAGMrB,ICvBAsB,EArBf,uKACY,IAAD,OACP,OAAOf,KAAKH,MAAMmB,MAAMC,KAAI,SAACnB,GAAD,OAC1B,6BACE,cAAC,EAAD,CAEEA,KAAMA,EACNO,aAAc,EAAKR,MAAMQ,aACzBG,QAAS,EAAKX,MAAMW,SAHfV,EAAKG,aALpB,GAA2BS,a,QCsCZQ,EAvCf,4MACEC,MAAQ,CACNjB,MAAO,IAFX,EAKEE,SAAW,SAACgB,GAAD,OAAO,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAL9D,EAOEC,SAAW,SAACL,GACVA,EAAEM,iBACF,EAAK7B,MAAM8B,QAAQ,EAAKR,MAAMjB,OAC9B,EAAKmB,SAAS,CAAEnB,MAAO,MAV3B,uDAcI,OACE,uBAAMuB,SAAUzB,KAAKyB,SAAUlC,MAAO,CAAEqC,QAAS,QAAjD,UACE,uBACEzB,KAAK,OACLoB,KAAK,QACLM,YAAY,cACZtC,MAAO,CAAEuC,KAAM,KAAM3C,QAAS,OAC9BqC,MAAOxB,KAAKmB,MAAMjB,MAClBE,SAAUJ,KAAKI,WAEjB,uBACED,KAAK,SACLqB,MAAM,SACNO,UAAU,MACVxC,MAAO,CAAEuC,KAAM,cA5BzB,GAA6BpB,aCQdsB,MATf,WACE,OACE,eAAC,IAAMC,SAAP,WACE,uCACA,kE,iBC+ESC,EA3Ef,4MACEf,MAAQ,CACNH,MAAO,IAFX,EAYEX,aAAe,SAACJ,GACd,EAAKoB,SAAS,CACZL,MAAO,EAAKG,MAAMH,MAAMC,KAAI,SAACnB,GAI3B,OAHIA,EAAKG,KAAOA,IACdH,EAAKC,WAAaD,EAAKC,WAElBD,QAlBf,EAwBEU,QAAU,SAACP,GACTkC,IACGC,OADH,qDACwDnC,IACrDoC,MAAK,SAACC,GAAD,OACJ,EAAKjB,SAAS,CACZL,MAAM,YAAK,EAAKG,MAAMH,MAAMuB,QAAO,SAACzC,GAAD,OAAUA,EAAKG,KAAOA,YA7BnE,EAmCE0B,QAAU,SAACzB,GACTiC,IACGK,KAAK,6CAA8C,CAClDtC,QACAH,WAAW,IAEZsC,MAAK,SAACC,GAAD,OACJ,EAAKjB,SAAS,CACZL,MAAM,GAAD,mBAAM,EAAKG,MAAMH,OAAjB,CAAwBsB,EAAIG,aA3C3C,kEAKuB,IAAD,OAClBN,IACGO,IAAI,wDACJL,MAAK,SAACC,GAAD,OAAS,EAAKjB,SAAS,CAAEL,MAAOsB,EAAIG,YARhD,+BA+CY,IAAD,OACP,OACE,cAAC,IAAD,UACE,qBAAKV,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CACEY,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAChD,GAAD,OACN,eAAC,IAAMoC,SAAP,WACE,cAAC,EAAD,CAASN,QAAS,EAAKA,UACvB,cAAC,EAAD,CACEX,MAAO,EAAKG,MAAMH,MAClBX,aAAc,EAAKA,aACnBG,QAAS,EAAKA,gBAKtB,cAAC,IAAD,CAAOoC,KAAK,SAASE,UAAWd,eAnE5C,GAAyBtB,aCEVqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.20b89c13.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport function Header() {\n  return (\n    <header style={headerStyle}>\n      <h1>TodoList</h1>\n      <Link style={linkStyle} to=\"/\">\n        Home\n      </Link>{\" \"}\n      |{\" \"}\n      <Link style={linkStyle} to=\"/about\">\n        About\n      </Link>\n    </header>\n  );\n}\n\nconst headerStyle = {\n  background: \"#333\",\n  color: \"#fff\",\n  textAlign: \"center\",\n  padding: \"10px\",\n};\n\nconst linkStyle = {\n  color: \"#fff\",\n  textDecoration: \"none\",\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      backgroundColor: \"#f4f4f4\",\n      padding: \"10px\",\n      borderBottom: \"1px #ccc dotted\",\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\",\n    };\n  };\n\n  render() {\n    const { id, title } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input\n            type=\"checkbox\"\n            onChange={this.props.markComplete.bind(this, id)}\n          />{\" \"}\n          {title}\n          <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>\n            x\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired,\n};\n\nconst btnStyle = {\n  background: \"#ff0000\",\n  color: \"#fff\",\n  border: \"none\",\n  padding: \"5px 9px\",\n  borderRadius: \"50%\",\n  cursor: \"pointer\",\n  float: \"right\",\n};\n\nexport default TodoItem;\n","import React, { Component } from \"react\";\nimport TodosItem from \"./TodoItem\";\nimport PropTypes from \"prop-types\";\n\nexport class Todos extends Component {\n  render() {\n    return this.props.todos.map((todo) => (\n      <h3>\n        <TodosItem\n          key={todo.id}\n          todo={todo}\n          markComplete={this.props.markComplete}\n          delTodo={this.props.delTodo}\n        />\n      </h3>\n    ));\n  }\n}\n\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired,\n};\n\nexport default Todos;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class AddTodo extends Component {\n  state = {\n    title: \"\",\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({ title: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} style={{ display: \"flex\" }}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Add Todo...\"\n          style={{ flex: \"10\", padding: \"5px\" }}\n          value={this.state.title}\n          onChange={this.onChange}\n        />\n        <input\n          type=\"submit\"\n          value=\"Submit\"\n          className=\"btn\"\n          style={{ flex: \"1\" }}\n        />\n      </form>\n    );\n  }\n}\n\nAddTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default AddTodo;\n","import React from \"react\";\n\nfunction About() {\n  return (\n    <React.Fragment>\n      <h1>About</h1>\n      <p>This is the TodoList app v1.0</p>\n    </React.Fragment>\n  );\n}\n\nexport default About;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport Todos from \"./components/Todos\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\";\n//import { v4 as uuid } from \"uuid\";\nimport axios from \"axios\";\n\nexport class App extends Component {\n  state = {\n    todos: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n      .then((res) => this.setState({ todos: res.data }));\n  }\n\n  //Toggle Complete\n  markComplete = (id) => {\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n    });\n  };\n\n  //Delete Todo\n  delTodo = (id) => {\n    axios\n      .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then((res) =>\n        this.setState({\n          todos: [...this.state.todos.filter((todo) => todo.id !== id)],\n        })\n      );\n  };\n\n  //Add Todo\n  addTodo = (title) => {\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/todos\", {\n        title,\n        completed: false,\n      })\n      .then((res) =>\n        this.setState({\n          todos: [...this.state.todos, res.data],\n        })\n      );\n  };\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}